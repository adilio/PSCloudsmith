function Get-CloudsmithVulnerability {
    [CmdletBinding(DefaultParameterSetName='feature')]
    Param(
        [Parameter(Mandatory,ParameterSetName='feature')]
        [Parameter(Mandatory,ParameterSetName='ScanId')]
        [Parameter(Mandatory,ParameterSetName='Package')]
        [Parameter(Mandatory,ParameterSetName='Repo')]
        [String]
        $Owner,

        [Parameter(Mandatory,ParameterSetName='Repo')]
        [Parameter(Mandatory,ParameterSetName='Package')]
        [Parameter(Mandatory,ParameterSetName='ScanId')]

        [String]
        $Repository,

        [Parameter(Mandatory,ParameterSetName='Package')]
        [String]
        $Package,

        [Parameter(Mandatory,ParameterSetName='ScanId')]
        [Alias('ScanId')]
        [String]
        $Scan_Id
    )

    begin {
        if (-not $header) {
            throw "Not connected to Cloudsmith API! Run Connect-CloudsmithInstance first!"
        }
    }

    process {
        $endpoint = "vulnerabilities/$Owner/"

        switch($PSCmdlet.ParameterSetName){
            'Repo' { 

                $endpoint = $endpoint + "$Repository" + '/'
                Invoke-Cloudsmith -Endpoint $endpoint -Method 'GET'
            }

            'Package' {

                $endpoint = $endpoint + "$Repository" + "/$Package" + '/'
                Invoke-Cloudsmith -Endpoint $endpoint -Method 'GET'

            }

            'ScanId' {

                $endpoint = $endpoint + "$Repository" + "/$Package" + "/$Scan_Id" + '/'
                Invoke-Cloudsmith -Endpoint $endpoint -Method 'GET'

            }
            default {
                Invoke-Cloudsmith -Endpoint $endpoint -Method 'GET'
            }
        }
    }
}